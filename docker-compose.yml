# Use postgres/example user/password credentials
version: '3.1'

services:
  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 10s
      retries: 6
    volumes:
      - ./db_data:/var/lib/postgresql/data
  parser:
    build:
      context: .
      dockerfile: scrapper/Dockerfile
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      INTERVAL: 1
    depends_on:
      db:
        condition: service_healthy
  web:
    build:
      context: .
      dockerfile: webpanel/Dockerfile
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
    depends_on:
      db:
        condition: service_healthy
